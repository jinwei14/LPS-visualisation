maxTime(100).
cycleInterval(1000).

fluents([
  fire(I),
  location(L)
]).
actions([
  deployFirefighters,
  moveFirefightersTo(_),
  putOutFire(_),
  ignite(_),
  returnToStation
]).

flammable(sofa).
flammable(grill).

initially([
  location(fireStation)
]).

fire(Item, T1),
  location(fireStation, T1) ->
    deal_with_fire(Item, T1, T2).

deal_with_fire(Item, T1, T3) <-
  location(fireStation, T1),
  deployFirefighters(T1, T2),
  handleItemWithFire(Item, T2, T3).

deal_with_fire(Item, T1, T3) <-
not location(fireStation, T1),
  handleItemWithFire(Item, T1, T3).

% base case for deal_with_fire, that is no more fire and we return to fire station
deal_with_fire(_, T1, T2) <-
  not fire(_, T1),
  returnToStation(T1, T2).

handleItemWithFire(Item, T1, T3) <-
  fire(Item, T1),
  location(Item, T1),
  putOutFire(Item, T1, T2),
  deal_with_fire(_, T2, T3).

handleItemWithFire(Item, T1, T3) <-
  fire(Item, T1),
  not location(Item, T1),
  moveFirefightersTo(Item, T1, T2),
  deal_with_fire(Item, T2, T3).

initiates(ignite(Object), fire(Object)) <-
  flammable(Object).

terminates(putOutFire(I), fire(I)).
updates(deployFirefighters, location(_), location(otw)).
updates(moveFirefightersTo(L), location(_), location(L)).
updates(returnToStation, location(_), location(fireStation)).

% cannot put out fire if not at the location
<- not location(X),
  putOutFire(X).

<- moveFirefightersTo(X),
  moveFirefightersTo(Y),
  X != Y.

% cannot put out fire at different places at the same time
<- putOutFire(X),
  putOutFire(Y),
  X != Y.
