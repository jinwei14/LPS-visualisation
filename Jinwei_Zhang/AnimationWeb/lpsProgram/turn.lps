
loadModule('../scripts/module.js').
fluents([
  stopped(VehicleName),
  moving(VehicleName),
  coordinate(X, Y),
  location(VehicleName, coordinate(X, Y), Direction),
  trafficLight(coordinate(X, Y), Working_status, Color, FacingDirection),
  street(StreetName, coordinate(X, Y), Width, Height, Number_of_lane, Priority),
  goal(VehicleName,coordinate(X, Y)),
  % define the junction coordinate
  junction(Name,coordinate(A, B),coordinate(C, D),coordinate(E, F),coordinate(G, H))
]).

% events will reserved for traffic lights
events ([

]).

actions ([
  turn(Vehicle, NewHeading)
]).

initially([
  moving(carA),
  moving(carB),
  location(carA, coordinate(500, 225), eastward),
  location(carB, coordinate(500 ,270), northward),
  goal(carA,coordinate(980, 225)),
  goal(carB,coordinate(120, 225)),
  street(mainStreet , coordinate(100, 200), 900, 50, 1,1),
  street(southStreet , coordinate(475, 250), 50, 500, 1,0),
  junction(tJuntion,coordinate(475, 200),coordinate(525, 200),coordinate(475, 250),coordinate(525, 250))
]).


% true ->
%   turn(carA, eastward) from T1 to T2.

goal(Vehicle,coordinate(A, B)) from _ to T,
location(Vehicle, coordinate(X, Y), Direction),
  moving(Vehicle) at T ->
    % need to find the right direction here
    % driving forward
    testPrint(Vehicle+' '+X+' '+Y+' Direction '+Direction + '----------------Reactive rule----------------'),
    direction(Vehicle).

direction(Vehicle) <-
  location(Vehicle, coordinate(X, Y), Direction),
  goal(Vehicle,coordinate(K, P)),
  junction(tJuntion,coordinate(A, B),coordinate(C, D),coordinate(E, F),coordinate(G, H)),
  X == (A+C)/2,
  Y == (B+F)/2,
  P == Y,
  K > X,
  turn(Vehicle, eastward) at T.


updates(turn(Vehicle, NewHeading) , location(VehicleIns, Place, OldHeading), location(VehicleIns, Place, NewHeading))<-
  Vehicle == VehicleIns,
  testPrint('updating turing ' + Vehicle + ' '+NewHeading).

% updates(turn(Vehicle, NewHeading) , location(Vehicle, Place, NewHeading), location(Vehicle, Place, NewHeading))<-
%   NewHeading == NewHeading,
%   testPrint('updating turing same' + Vehicle).
