% --- Specification generated for test/programs/bubbleSort.lps
% --- Start of cycle 1 ---
expect_num_of(fluent, 1, 4).
  expect(fluent, 1, location(d, 1)).
  expect(fluent, 1, location(c, 2)).
  expect(fluent, 1, location(b, 3)).
  expect(fluent, 1, location(a, 4)).

% --- Start of cycle 2 ---
expect_num_of(fluent, 2, 4).
  expect(fluent, 2, location(d, 2)).
  expect(fluent, 2, location(b, 4)).
  expect(fluent, 2, location(c, 1)).
  expect(fluent, 2, location(a, 3)).
expect_num_of(action, 1, 2, 2).
  expect(action, 1, 2, swap(d, 1, c, 2)).
  expect(action, 1, 2, swap(b, 3, a, 4)).
expect_num_of(observation, 1, 2, 0).
expect_num_of(firedRules, 2, 4).
expect_num_of(resolvedGoals, 2, 2).
expect_num_of(unresolvedGoals, 2, 2).
expect_num_of(failedGoals, 2, 0).

% --- Start of cycle 3 ---
expect_num_of(fluent, 3, 4).
  expect(fluent, 3, location(b, 4)).
  expect(fluent, 3, location(c, 1)).
  expect(fluent, 3, location(d, 3)).
  expect(fluent, 3, location(a, 2)).
expect_num_of(action, 2, 3, 1).
  expect(action, 2, 3, swap(d, 2, a, 3)).
expect_num_of(observation, 2, 3, 0).
expect_num_of(firedRules, 3, 3).
expect_num_of(resolvedGoals, 3, 1).
expect_num_of(unresolvedGoals, 3, 4).
expect_num_of(failedGoals, 3, 0).

% --- Start of cycle 4 ---
expect_num_of(fluent, 4, 4).
  expect(fluent, 4, location(c, 2)).
  expect(fluent, 4, location(d, 4)).
  expect(fluent, 4, location(a, 1)).
  expect(fluent, 4, location(b, 3)).
expect_num_of(action, 3, 4, 2).
  expect(action, 3, 4, swap(c, 1, a, 2)).
  expect(action, 3, 4, swap(d, 3, b, 4)).
expect_num_of(observation, 3, 4, 0).
expect_num_of(firedRules, 4, 3).
expect_num_of(resolvedGoals, 4, 2).
expect_num_of(unresolvedGoals, 4, 5).
expect_num_of(failedGoals, 4, 0).

% --- Start of cycle 5 ---
expect_num_of(fluent, 5, 4).
  expect(fluent, 5, location(d, 4)).
  expect(fluent, 5, location(a, 1)).
  expect(fluent, 5, location(c, 3)).
  expect(fluent, 5, location(b, 2)).
expect_num_of(action, 4, 5, 1).
  expect(action, 4, 5, swap(c, 2, b, 3)).
expect_num_of(observation, 4, 5, 0).
expect_num_of(firedRules, 5, 1).
expect_num_of(resolvedGoals, 5, 1).
expect_num_of(unresolvedGoals, 5, 5).
expect_num_of(failedGoals, 5, 0).

% --- Start of cycle 6 ---
expect_num_of(fluent, 6, 4).
  expect(fluent, 6, location(d, 4)).
  expect(fluent, 6, location(a, 1)).
  expect(fluent, 6, location(c, 3)).
  expect(fluent, 6, location(b, 2)).
expect_num_of(action, 5, 6, 0).
expect_num_of(observation, 5, 6, 0).
expect_num_of(firedRules, 6, 0).
expect_num_of(resolvedGoals, 6, 0).
expect_num_of(unresolvedGoals, 6, 5).
expect_num_of(failedGoals, 6, 0).

% --- Start of cycle 7 ---
expect_num_of(fluent, 7, 4).
  expect(fluent, 7, location(d, 4)).
  expect(fluent, 7, location(a, 1)).
  expect(fluent, 7, location(c, 3)).
  expect(fluent, 7, location(b, 2)).
expect_num_of(action, 6, 7, 0).
expect_num_of(observation, 6, 7, 0).
expect_num_of(firedRules, 7, 0).
expect_num_of(resolvedGoals, 7, 0).
expect_num_of(unresolvedGoals, 7, 5).
expect_num_of(failedGoals, 7, 0).

% --- Start of cycle 8 ---
expect_num_of(fluent, 8, 4).
  expect(fluent, 8, location(d, 4)).
  expect(fluent, 8, location(a, 1)).
  expect(fluent, 8, location(c, 3)).
  expect(fluent, 8, location(b, 2)).
expect_num_of(action, 7, 8, 0).
expect_num_of(observation, 7, 8, 0).
expect_num_of(firedRules, 8, 0).
expect_num_of(resolvedGoals, 8, 0).
expect_num_of(unresolvedGoals, 8, 5).
expect_num_of(failedGoals, 8, 0).

% --- Start of cycle 9 ---
expect_num_of(fluent, 9, 4).
  expect(fluent, 9, location(d, 4)).
  expect(fluent, 9, location(a, 1)).
  expect(fluent, 9, location(c, 3)).
  expect(fluent, 9, location(b, 2)).
expect_num_of(action, 8, 9, 0).
expect_num_of(observation, 8, 9, 0).
expect_num_of(firedRules, 9, 0).
expect_num_of(resolvedGoals, 9, 0).
expect_num_of(unresolvedGoals, 9, 5).
expect_num_of(failedGoals, 9, 0).

% --- Start of cycle 10 ---
expect_num_of(fluent, 10, 4).
  expect(fluent, 10, location(d, 4)).
  expect(fluent, 10, location(a, 1)).
  expect(fluent, 10, location(c, 3)).
  expect(fluent, 10, location(b, 2)).
expect_num_of(action, 9, 10, 0).
expect_num_of(observation, 9, 10, 0).
expect_num_of(firedRules, 10, 0).
expect_num_of(resolvedGoals, 10, 0).
expect_num_of(unresolvedGoals, 10, 5).
expect_num_of(failedGoals, 10, 0).

